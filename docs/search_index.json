[["index.html", "Applied Econometrics with R Preface", " Applied Econometrics with R Bekah Selby, Ph.D. 2022-01-25 Preface Department of Math and Economics Emporia State University Emporia, Kansas rselby@emporia.edu Last updated on Tuesday, January 25, 2022 Acknowledgements This text is adapted and modified from Introduction to Econometrics with R by Christoph Hanck, Martin Arnold, Alexander Gerber, and Martin Schmelzer (2022) which is licensed under the Creative Commons Attribution-NonCommericial-ShareAlike 4.0 International License. Copyright Â© 2022 Hanck, Arnold, Gerber, and Schmelzer This book is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. About this book Econometrics, like so many applied statistics courses, has evolved tremendously in modern times due to the prevalence, efficiency, and accessibility of data processing software and hardware. Increasingly, applied econometricians are learning tools of the trade used by programmers and data science. At Emporia State University, we launched the Masters of Science in Informatics with a concentration in Quantitative Economics in 2018 to address the need for graduates who are trained researchers in economics but also have the practical expertise in data management, analysis, and manipulation. At the time of launch and the writing of this book, many data analysts and researchers need expertise in at least one programming language. The core of the Informatics program is a rigorous two-semester course series in econometrics. At the time of writing this book, there were little to no open educational resources (OER) that provides both the level of econometric theory and practical application that is needed for our masters students. This text builds upon and modifies the OER text Introduction to Econometrics with R by Hanck, Arnold, Gerber, and Schmelzer. Several areas have been added, modified, or eliminated to provide the content needed for the MS Informatics program. Conventions Used in this Book Italic text indicates new terms, names, buttons and alike. Constant width text is generally used in paragraphs to refer to R code. This includes commands, variables, functions, data types, databases and file names. Constant width text on gray background indicates R code that can be typed literally by you. It may appear in paragraphs for better distinguishability among executable and non-executable code statements but it will mostly be encountered in shape of large blocks of R code. These blocks are referred to as code chunks. "],["1-introduction.html", "1 Introduction", " 1 Introduction Econometrics is the science of combining economic theory, mathematics, and statistics to analyze and predict economic phenomena. Applied econometricians use real-world data to test economic theories, conduct policy analysis, and forecast. Modern applied econometrics also involves methods from data and computer science. This textbook provides the young applied econometrician with the fundamental theory and practical application experience necessary in an increasingly competitive workforce. For the purposes of this text, we utilize the R programming language: a powerful, open-access, and growing statistical analysis tool. Moreover, many employers are increasingly requesting new analysts to have experience with R or similar programming languages. We also utilize RStudio as the integrated development environment (IDE) because it is availble at no-cost to students and is very user-friendly to new practitioners. This book begins with a primer in R programming and how to utilize RStudio. We then begin a review of probability theory and statistics necessary for econometric analysis. The next several chapters introduce and build upon regression analysis - the foundation of most econometric research. We then move into causal inference models, focusing our attention on a couple high-powered and widely-used estimation techniques. The book concludes with several chapters on time series analysis and forecasting techniques. Each chapter includes sections on theory, examples of applications, and applied exercises. The exercises often utilize an interactive, embedded R-script and console created by DataCamp; this allows students to practice coding directly in the digital version of the text. "],["1.1-colophon.html", "1.1 Colophon", " 1.1 Colophon This book was build with: #&gt; - Session info --------------------------------------------------------------- #&gt; setting value #&gt; version R version 4.0.5 (2021-03-31) #&gt; os Windows 10 x64 #&gt; system x86_64, mingw32 #&gt; ui RTerm #&gt; language (EN) #&gt; collate English_United States.1252 #&gt; ctype English_United States.1252 #&gt; tz America/Chicago #&gt; date 2022-01-25 #&gt; #&gt; - Packages ------------------------------------------------------------------- #&gt; ! package * version date lib source #&gt; R itewrpkg &lt;NA&gt; &lt;NA&gt; [?] &lt;NA&gt; #&gt; #&gt; [1] C:/Program Files/R/R-4.0.5/library #&gt; #&gt; R -- Package was removed from disk. "],["1.2-basics-of-r-and-rstudio.html", "1.2 Basics of R and RStudio", " 1.2 Basics of R and RStudio R Basics This book is not intended to be an introduction to R but a guide on how to use its capabilities for applications commonly encountered in applied econometrics. This section will summarize the basic functions of this language; throughout the remaining text, you will be exposed to more advanced use of R. Those having basic knowledge in R programming may feel comfortable starting with Chapter 2. This section, however, is meant for those who have not worked with R or RStudio before. If you at least know how to create objects and call functions, you can skip it. If you would like to refresh your skills or get a feeling for how to work with RStudio, keep reading. If you would like a more in-depth introduction to R and RStudio, there are several reputable online resources. Here is a brief list: DataCamp: Introduction to R LINK SkillUp: R Programming for Beginners LINK EdX: Various courses LINK Downloading R and RStudio The first step is to download and install R and RStudio on your computer. If you are working on a computer provided by your employer, you may need to contact your IT department before continuing. In order to use RStudio to analyze R code, you need to download the raw programming language as well as the RStudio integrated development environment (IDE). Download R: You will want to download the most recent version of R to your computer. To do this is to go to The R-Project and find the appropriate version for your machine. For your convenience, we have included links to download the Windows Version and the Mac Version. See this page for a more detailed description of how to download R onto your machine. Download RStudio: To download RStudio, go to rstudio.com and click to download the appropriate version for your computer. We recommend RStudio Desktop for all econometrics students. It is free and includes all the tools we will use throughout this textbook. The Layout of Rstudio Figure 1.1: RStudio: the four panes RStudio is divided into four panes or work regions. In the above figure, you will see where these panes are located on the screen. Pane 1 is called the Source Editor. This pane may not immediately be visible when first starting RStudio. This region is where you will write code in large chunks and run it all at once. You will also be able to see some data, work with other programming languages, and do various other tasks in this space. Pane 2 is the Environment pane. This is where you will be able to see all of the objects that you have created and saved into Rs memory. You may see various other tabs, such as History, connections, and Tutorial. Pane 3 is the Files pane. This is where you will be able to see and access files on your computer. You will also be able to see graphical output under the Plots tab and also learn more about installed packages under the Packages and Help tabs. Pane 4 is the Console pane. This is where you can directly communicate to R and make your requests. The source editor will send requests to the console for computation. Code run in the console is not saved for future use (however you can find past computations under the History tab in the environment pane). Your First Code First of all, start RStudio. We will start by working in the console pane. In the console, type 1 + 1 and press the enter key on your keyboard. By doing so, your line of code is read by R and the result of this operation should be displayed right underneath it. In this case, R works just like a calculator. You can do all arithmetic calculations by using the corresponding operator (+, -, *, / or ^). If you are not sure what the last operator does, try it out and check the results. Variables R is of course more sophisticated than that. We can work with variables or, more generally, objects. Objects are defined by using the assignment operator &lt;-. To create a variable named x which contains the value 10, type x &lt;- 10 and press enter. The new variable should have appeared in the environment pane on the top right. The console, however, did not show any results; this is because our line of code did not contain any requests to show output. Put simply, all you asked R to do was to remember the number 10 and associate it with the name x. When you now type x in the console and hit return, you ask R to show you the value of x and the corresponding value should be printed in the console. Vectors x is a scalar, a vector of length \\(1\\). You can easily create longer vectors by using the function c() (c is for concatenate or combine). To create a vector y containing the numbers \\(1\\) to \\(5\\) and print it, do the following. y &lt;- c(1, 2, 3, 4, 5) y #&gt; [1] 1 2 3 4 5 You can also create a vector of letters or words (called characters). For now just remember that characters have to be surrounded by quotes, else they will be understood as object names. hello &lt;- c(&quot;Hello&quot;, &quot;World&quot;) Here we have created a vector of length 2 containing the words Hello and World. Type hello into the console to see the output. Functions You have seen the function c() that can be used to combine objects. A function is a pre-programmed series of code the conducts a very specific task. In general, all function calls look the same: a function name is always followed by round parentheses. Sometimes, the parentheses include arguments. Arguments are pieces of information used by the function to perform the calculations. Here are two simple examples. # generate the vector `z` z &lt;- seq(from = 1, to = 5, by = 1) # compute the mean of the enries in `z` mean(z) #&gt; [1] 3 In the first line we use a function called seq() to create the exact same vector as we did in the previous section, calling it z. The function takes on the arguments from, to and by. The function mean() computes the arithmetic mean of its argument x. Since we pass the vector z as the argument x, the result is 3! Documentation If you are not sure which arguments a function expects, you may consult the functions documentation. Documentation is a detailed description of the data, function, or other R package contents. There are several ways to access the documentation. The easiest is using the ? operator. Lets say we are not sure how the arguments required for seq() work. We then type ?seq in the console. By hitting return the documentation page for that function pops up in the lower right pane of RStudio. In there, the section Arguments holds the information we seek. On the bottom of almost every help page you find examples on how to use the corresponding functions. This is very helpful for beginners and we recommend to look out for those. Interactive Widgets Of course, all of the commands presented above also work in interactive widgets throughout the book. You may try them below. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
